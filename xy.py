from youtube_transcript_api import YouTubeTranscriptApi

def fetch_transcript(video_id):
    try:
        # Fetch the transcript
        srt = YouTubeTranscriptApi.get_transcript(video_id)

        # Print the transcript
        for entry in srt:
            print(f"Start: {entry['start']}, Duration: {entry['duration']}, Text: {entry['text']}")
        
        with open("subtitles.txt", "w") as f:
   
            # iterating through each element of list srt
            for i in srt:
                # writing each element of srt on a new line
                f.write("{}\n".format(i))

    except Exception as e:
        # Catch all exceptions and print the error message
        print(f"An error occurred: {e}")

def all_transcript(video_id):
    try:
        transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)

        for transcript in transcript_list:
    
            # the Transcript object provides metadata
            # properties
            print(
                transcript.video_id,
                transcript.language,
                transcript.language_code,
            
                # whether it has been manually created or
                # generated by YouTube
                transcript.is_generated,
                
                # whether this transcript can be translated 
                # or not
                transcript.is_translatable,
                
                # a list of languages the transcript can be 
                # translated to
                transcript.translation_languages,
            )
        
            # fetch the actual transcript data
            print(transcript.fetch())

            # translating the transcript will return another
            # transcript object
            print(transcript.translate('en').fetch())
 
        # you can also directly filter for the language you are
        # looking for, using the transcript list
        transcript = transcript_list.find_transcript(['en'])
        
        # or just filter for manually created transcripts
        transcript = transcript_list.find_manually_created_transcript(['en'])

        # Fetch the transcript
        srt = YouTubeTranscriptApi.get_transcript(video_id)

        # Print the transcript
        for entry in srt:
            print(f"Start: {entry['start']}, Duration: {entry['duration']}, Text: {entry['text']}")
        
        with open("subtitles.txt", "w") as f:
   
            # iterating through each element of list srt
            for i in srt:
                # writing each element of srt on a new line
                f.write("{}\n".format(i))

    except Exception as e:
        # Catch all exceptions and print the error message
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    video_id = "QrwGISxc9VU"  # Replace with your video ID
    fetch_transcript(video_id)
    all_transcript(video_id)

